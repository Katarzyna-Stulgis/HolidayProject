@model Domain.Entities.Property

<a href="@Url.Action("AddImage", "PropertyManagement", new { id = Model.PropertyId })" class="btn btn-primary">Upload Image to property</a>

<form asp-action="Create" asp-controller="Booking" class="container mt-4">
    <h2 class="mb-3">@Model.Name</h2>
    <p>@Model.Blurb</p>
    <p><strong>Location:</strong> @Model.Location</p>
    <p><strong>Location:</strong> @Model.PropertyId</p>
    <p><strong>Bedrooms:</strong> @Model.NumberOfBedrooms</p>
    <p><strong>Cost per Night:</strong> $@Model.CostPerNight</p>
    <p><strong>Description:</strong> @Model.Description</p>
    <p><strong>Amenities:</strong> @string.Join(", ", Model.Amenities)</p>
    <div class="form-group">
        <p><strong>Booked Dates:</strong></p>
        <input class="datetimepicker-input" id="bookedDates" style="cursor: pointer;" name="dates"></input>
    </div>
    <input type="hidden" name="propertyId" value="@Model.PropertyId" />
    <input type="hidden" id="StartDate" name="startDate" />
    <input type="hidden" id="EndDate" name="endDate" />

    <button type="submit" class="btn btn-primary mt-4">Submit</button>
</form>
    
<head>
    <style>
        .highlighted a {
            background-color: aquamarine !important;
        }

        .ui-state-default.highlighted {
            background-color: aquamarine !important;
            border: 1px solid aquamarine;
        }

        .ui-datepicker td.ui-state-disabled > span {
            background: #c30;
        }

        .ui-datepicker td.ui-state-disabled {
            opacity: 100;
        }
    </style>
</head>

@section Scripts {
    <script>
        $(document).ready(function () {
            var rangeStart = null;
            var rangeEnd = null;

            var bookedDates = @Html.Raw(Json.Serialize(Model.BookedNights.Select(d => d.Night.ToString("yyyy-MM-dd"))));

            function updateRange(start, end) {
                rangeStart = start;
                rangeEnd = end;
            }

            $("#bookedDates").datepicker({
                dateFormat: 'yy-mm-dd',
                autoclose: true,
                todayHighlight: true,
                beforeShowDay: function (date) {
                    var stringDate = $.datepicker.formatDate('yy-mm-dd', date);
                    if ($.inArray(stringDate, bookedDates) !== -1) {
                        return [false, ''];
                    }

                    // if ((date.toISOString().split('T')[0] >= rangeStart && date.toISOString().split('T')[0] <= rangeEnd)) {
                    //     console.log(date.toISOString().split('T')[0] + " " + rangeStart)
                    //     return [true, 'highlighted'];
                    // }
                    return [true, ''];
                },
                onSelect: function (selectedDate) {
                    if (!$(this).data().datepicker.first) {
                        $(this).data().datepicker.inline = true;
                        $(this).data().datepicker.first = selectedDate;
                    } else {
                        var overlap = false;
                        for (var i = 0; i < bookedDates.length; i++) {
                            if (isDateInRange(bookedDates[i], $(this).data().datepicker.first, selectedDate)) {
                                overlap = true;
                                break;
                            }
                        }

                        if (selectedDate > $(this).data().datepicker.first && selectedDate && overlap == false) {
                            $(this).val($(this).data().datepicker.first + " - " + selectedDate);
                            updateRange($(this).data().datepicker.first, selectedDate);
                        }

                        if (selectedDate < $(this).data().datepicker.first && selectedDate && overlap == false) {
                            $(this).val(selectedDate + " - " + $(this).data().datepicker.first);
                            updateRange(selectedDate, $(this).data().datepicker.first);
                        }

                        if (overlap == true) {
                            delete $(this).data().datepicker.first;
                            $(this).data().datepicker.inline = false;
                        }
                    }
                },
                onClose: function () {
                    $("#StartDate").val(rangeStart);
                    $("#EndDate").val(rangeEnd);
                    delete $(this).data().datepicker.first;
                    $(this).data().datepicker.inline = false;
                }
            });

        });
        function isDateInRange(date, start, end) {
            if (start < end) {
                return date >= start && date <= end;
            }
            return date >= end && date <= start;
        }
    </script>
}
